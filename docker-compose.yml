version: "3"
services:
  api:
    build: ./api
    networks:
      - backend
      - frontend
    ports:
      - 443:443
      - 8080:8080

  frontend:
    build: ./front
    networks:
      - frontend
    ports:
      - 3000:3000

  mail_api:
    build: ./mail_api
    networks:
      - backend
    ports:
      - 7979:8080

  redis:
    image: redis
    networks:
      - backend
    ports:
      - 6379:6379

  mongodb:
    image: mongo
    networks:
      - backend
    ports:
      - 27017:27017
    volumes:
      - ~/apps/mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=admin

  test:
    build: ./test
    networks:
      - backend

  api-tdd:
    name: api-tdd
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: create mongodb container
        run: |
          docker-compose up --build --detach
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
      - name: Install dependencies
        run: cd back/ && yes | yarn install
      - name: "Create env file"
        run: |
          cd back
          touch .env
          echo DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
          echo DB_DATABASE=${{ secrets.DB_DATABASE }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo FRONT_URL=${{ secrets.FRONT_URL }} >> .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo AUTH_ISS=${{ secrets.AUTH_ISS }} >> .env
          echo AUTH_AUD=${{ secrets.AUTH_AUD }} >> .env
          echo AUTH_ALGORITHM=${{ secrets.AUTH_ALGORITHM }} >> .env
          echo RAPID_API_KEY=${{ secrets.RAPID_API_KEY }} >> .env
          echo LYKO_API_KEY=${{ secrets.LYKO_API_KEY }} >> .env
          echo TICKETMASTER_API_KEY=${{ secrets.TICKETMASTER_API_KEY }} >> .env
          cat .env
      - name: Start the api
        run: cd back/ && yarn start &
      - name: Integration test
        run: cd back/ && yarn test:integration

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
