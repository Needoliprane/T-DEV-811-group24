import axios from 'axios';
import { Helmet } from 'react-helmet';
import { createSearchParams } from 'react-router-dom';
import { toast } from 'react-toastify';
import styles from 'styles/Home.module.css';
import { Banner, Collection, Header, LargeCard, SmallCard } from '../components';

const getUrl = (location: string) => {
	const params = createSearchParams({
		location,
		startDate: new Date().toDateString() || '',
		endDate: new Date().toDateString() || '',
		numberOfGuests: '1',
	});

	return `/search?${params}`;
};

const DEFAULT_CITIES = [
	{
		name: 'Paris',
		description: 'City of love',
		image:
			'https://www.hoteldesgrandshommes.com/uploads/images/monuments/xhc-a-eu-france-paris-eiffel-tower.jpg.pagespeed.ic.yhN88MFsAe.jpg',
		link: getUrl('Paris'),
		location: 'France',
	},
	{
		name: 'London',
		description: 'Captial of the United Kingdom',
		image:
			'https://a.cdn-hotels.com/gdcs/production27/d274/43014cca-c88c-4061-ace8-58edc24531ee.jpg',
		link: getUrl('London'),
		location: 'United Kingdom',
	},
	{
		name: 'New York',
		description: 'City of lights',
		image: 'http://www.godominicanrepublic.com/wp-content/uploads/2018/03/newyork-64819822_xxl.jpg',
		link: getUrl('New York'),
		location: 'United States',
	},
	{
		name: 'Tokyo',
		description: 'City of culture',
		image:
			'https://dynamic-media-cdn.tripadvisor.com/media/photo-o/1b/4b/5d/10/caption.jpg?w=500&h=300&s=1&cx=1005&cy=690&chk=v1_2ed86f729380ea073850',
		link: getUrl('Tokyo'),
		location: 'Japan',
	},
	{
		name: 'Rome',
		description: 'City of history',
		image: 'https://res.klook.com/image/upload/Mobile/City/afmqgg5h0jl9wnr1dfmf.jpg',
		link: getUrl('Rome'),
		location: 'Italy',
	},
];

const Home = () => {
	const citiesGridStyle = {
		'--grid-col-lg': 4,
		'--grid-col-sm': 2,
	} as React.CSSProperties;

	const options = {
		enableHighAccuracy: true,
		timeout: 5000,
		maximumAge: 0,
	};

	const getPosition = (data) => {
		console.log(data);
		axios
			.get(
				`https://api.geoapify.com/v1/geocode/reverse?lat=${data.coords.latitude}&lon=${data.coords.longitude}&apiKey=${process.env.REACT_APP_GEOAPIFY_API_KEY}`
			)
			.then((res) => {
				console.log(res.data);
				console.log(res.data.features[0].properties.city);
			})
			.catch((err) => {
				console.log(err);
			});
	};

	const handlePositionError = (error) => {
		toast.error('Unable to get your location');
	};

	const handlePermission = () => {
		navigator.permissions.query({ name: 'geolocation' }).then(function (result) {
			if (result.state === 'granted') {
				report(result.state);
				navigator.geolocation.getCurrentPosition(getPosition, handlePositionError, options);
			} else if (result.state === 'prompt') {
				report(result.state);
			} else if (result.state === 'denied') {
				report(result.state);
			}
			result.addEventListener('change', function () {
				report(result.state);
			});
		});
	};
	const report = (state) => {
		console.log('Permission ', state);
		toast.warning('Permission ', state);
	};

	return (
		<div className={styles.container}>
			<Helmet>
				<title>Web project</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Helmet>
			<Header />
			<Banner onClick={handlePermission} />
			<Collection title="Explore the cities nearby" style={citiesGridStyle}>
				{DEFAULT_CITIES.map((city, key) => (
					<SmallCard
						city={city.name}
						description={city.description}
						location={city.location}
						image={city.image}
						link={city.link}
						key={key + city.name + city.description}
					/>
				))}
			</Collection>
			<LargeCard
				image="https://images.pexels.com/photos/259588/pexels-photo-259588.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260"
				title="test"
				btnText="Button"
				link="/"
			/>
		</div>
	);
};

export default Home;
