openapi: 3.0.0

info:
  version: "1.0.0"
  title: EpicRoadTrip API

paths:
  /ping:
    get:
      summary: Ping the API
      tags:
        - ping
      description: This route is used to check the API liveness.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    default: "pong"

  /users/:
    get:
      summary: Admin protected route to get all users
      operationId: usersGet
      tags:
        - users
      description: Returns all users from the db if the user is identified as an administrator
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  email:
                    type: string
    post:
      summary: Admin protected route to create a user
      operationId: usersPost
      tags:
        - users
      description: Creates to the db and returns the user created by an identified admin
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  email:
                    type: string
    delete:
      summary: Admin protected route to delete a user
      operationId: usersDel
      tags:
        - users
      description: Deletes an user from the db using the id passed as a parameter when requested by an admin.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  email:
                    type: string
  /auth/login:
    post:
      summary: Unprotected route to log in a user
      operationId: authLogin
      tags:
        - auth
      description: Finds user by email, verifies password, returns a token
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  tokenType:
                    type: string
                    default: "Bearer"
  /auth/sign-up:
    post:
      summary: Unprotected route to create a user
      operationId: authSignup
      tags:
        - auth
      description: Creates user by email, password, firstName, lastName returns a token
      responses:
        "201":
          description: OK
  /drink/:city:
    get:
      summary: Drink venues by location
      operationId: drinksGet
      tags:
        - drink
      description: Returns drinks near the location
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          minimum: 1
                        name:
                          type: string
                        address:
                          type: string
                        phone_number:
                          type: string
                        website:
                          type: string
                        location:
                          type: object
                          properties:
                            lat:
                              type: number
                            lng:
                              type: number
  /eat/:city:
    get:
      summary: Eat venues by location
      operationId: eatGet
      tags:
        - eat
      description: Returns eat near the location
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          minimum: 1
                        name:
                          type: string
                        address:
                          type: string
                        phone_number:
                          type: string
                        website:
                          type: string
                        location:
                          type: object
                          properties:
                            lat:
                              type: number
                            lng:
                              type: number
  /serviceType/:type/:city:
    get:
      summary: Services by type and location
      operationId: serviceTypeGet
      tags:
        - serviceType
      description: Returns services by type and location
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          minimum: 1
                        name:
                          type: string
                        address:
                          type: string
                        phone_number:
                          type: string
                        website:
                          type: string
                        location:
                          type: object
                          properties:
                            lat:
                              type: number
                            lng:
                              type: number
                        types:
                          type: array
                          items:
                            type: string

servers:
  - url: http://localhost:${PORT}
    description: Local server
