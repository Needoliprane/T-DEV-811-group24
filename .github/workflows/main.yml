# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [ devops, master, main ]
  pull_request:
    branches: [ devops, master, main ]
  workflow_dispatch:

jobs:
    
  frontendtest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
      - name: Installing project dependencies
        run: cd ./front/frontend_nextjs && npm install
      - name: Building the project
        run: cd ./front/frontend_nextjs && npm run build

  backendtest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8 #install the python needed
      - name: Installing project dependencies
        run: docker-compose up --build --detach mongodb redis mail_api frontend api
      - name: test backend
        run: docker-compose up --build test
  
  tdd_api:
    name: tdd_api
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: create mongodb container
        run: |
          docker-compose up --build --detach
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Install dependencies
        run: cd back/ && yes | yarn install
      - name: 'Create env file'
        run: |
          cd back
          touch .env
          echo DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
          echo DB_DATABASE=${{ secrets.DB_DATABASE }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo FRONT_URL=${{ secrets.FRONT_URL }} >> .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo AUTH_PRIVATE_KEY_FILE=${{ secrets.AUTH_PRIVATE_KEY_FILE }} >> .env
          echo AUTH_PUBLIC_KEY_FILE=${{ secrets.AUTH_PUBLIC_KEY_FILE }} >> .env
          echo AUTH_ISS=${{ secrets.AUTH_ISS }} >> .env
          echo AUTH_AUD=${{ secrets.AUTH_AUD }} >> .env
          echo AUTH_ALGORITHM=${{ secrets.AUTH_ALGORITHM }} >> .env
          echo RAPID_API_KEY=${{ secrets.RAPID_API_KEY }} >> .env
          echo LYKO_API_KEY=${{ secrets.LYKO_API_KEY }} >> .env
          echo TICKETMASTER_API_KEY=${{ secrets.TICKETMASTER_API_KEY }} >> .env
          cat .env
      - name: Start the api
        run: cd back/ && yarn start &
      - name: Integration test
        run: cd back/ && yarn test:integration

  deploy:
    runs-on: ubuntu-latest
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [backendtest, frontendtest]
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          cd T-WEB-800-T-WEB-800_msc2023
          sudo docker-compose stop
          git pull origin main
          sudo docker-compose up --build --detach mongodb redis mail_api frontend api
